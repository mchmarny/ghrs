name: on_tag
on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'  # Only build tag with semantic versioning format

permissions:
  contents: read

jobs:

  conf:
    env:
      ERR_VULNERABILITY_SEV: "CRITICAL,HIGH,MEDIUM"
      GO_VERSION: "1.20.1"

    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      err_on_vulnerability_sev: ${{ steps.conf.outputs.err_on_vulnerability_sev }}
      go_version: ${{ steps.conf.outputs.go_version }}
    steps:

    - name: Export Config
      id: conf
      run: |
        echo "err_on_vulnerability_sev=${{ env.ERR_VULNERABILITY_SEV }}" >> $GITHUB_OUTPUT
        echo "go_version=${{ env.GO_VERSION }}" >> $GITHUB_OUTPUT

  test:
    needs:
    - conf
    permissions:
      contents: read
      security-events: write
      id-token: write
    uses: ./.github/workflows/test.yaml
    with:
      go_version: ${{ needs.conf.outputs.go_version }}
      scan_severity: ${{ needs.conf.outputs.err_on_vulnerability_sev }}

  build:
    needs:
    - conf
    - test
    permissions:
      contents: read
      actions: read
      id-token: write
      packages: write
    uses: ./.github/workflows/build.yaml

  sign:
    needs:
    - conf
    - build
    permissions:
      contents: read
      actions: read
      id-token: write
      packages: write
    uses: ./.github/workflows/sign.yaml
    with:
      image_digest: ${{ needs.build.outputs.digest }}
      scan_severity: ${{ needs.conf.outputs.err_on_vulnerability_sev }}

  slsa:
    needs:
    - build
    permissions:
      contents: read
      actions: read
      id-token: write
      packages: write
    uses: ./.github/workflows/slsa.yaml
    with:
      image_digest: ${{ needs.build.outputs.digest }}

  valid:
    needs:
    - build
    permissions:
      contents: read
    uses: ./.github/workflows/valid.yaml
    with:
      file: ${{ needs.build.outputs.digest }}
      required: false

  print:
    needs:
    - valid
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Print Output
      run: |
        echo "output: ${{ needs.valid.outputs.output }}"
        echo "processed_on: ${{ needs.valid.outputs.processed_on }}"
